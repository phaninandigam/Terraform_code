Terraform:

locals {
  common_tags = {
    name = "test-instance"
    team = "developer"
    BU   = "devops"
    CreationDate = "date-${formatdate("DDMMYYYY", timestamp())}"
  }
}

resource "aws_instance" "app-dev" {
  ami           = "ami-0c1a7f89451184c8b"
  instance_type = "t2.micro"
  tags          = local.common_tags
}


resource "aws_ebs_volume" "db_ebs" {
  availability_zone = "ap-south-1a"
  size              = 8
  tags = {
    name = "testec2-volume"
  }
}
Tejas Ks
7:23â€¯AM
variable "bucket_names" {
  type    = list(string)
  default = ["logs", "backups", "data"]
}

locals {
  s3_bucket = { for name in var.bucket_names : name => "jenkins-${name}-bucket"}
}
resource "aws_s3_bucket" "mybuckets" {
  for_each = local.s3_bucket
  //jenkins-data-bucket
   bucket = each.value  
}

https://github.com/Tejasks16/terraform

DATA BLOCK:

data "aws_ami" "dynamic_ami" {
  owners = ["amazon"]
  most_recent = true

  filter {
    name = "name"
    values = ["amzn2-ami-hvm-*-x86_64-gp2"]
  }

   filter {
    name   = "root-device-type"
    values = ["ebs"]
  }

  filter {
    name   = "virtualization-type"
    values = ["hvm"]
  }
}


resource "aws_instance" "web" {
  ami =   data.aws_ami.dynamic_ami.id
  instance_type = "t2.micro"
}

output "ami" {
  value = data.aws_ami.dynamic_ami.id
}
